# LocationCheck checks Lagerorte.

<</LocationCheck.py
<<import>>

class LocationCheck(FhirCheck):
    <<init>>
    <<check>>
>>

Die Importe.

<<import
import re

from dig import *
from FhirCheck import *
from fhirhelp import fhirhelp as fh
>>

Wenn Restmenge 0 ist darf kein Lagerort vorhanden sein, sonst muss es
einen Lagerort geben.

<<check
    def check(self, entry):
        ok = True
        resource = dig(entry, "resource")
        sampleid = fh.sampleid(resource)
        # restmenge zero
        if fh.restmenge(resource) == 0 and fh.lagerort(resource) != None:
            self.err(f"restmenge of sample {sampleid} is zero, it shouldn't have a lagerort but it's lagerort is {fh.lagerort(resource)}.")
>>

Wenn die Restmenge groesser 0 ist, gibt es den Lagerort in der DB?

<<
        if fh.restmenge(resource) > 0:
            locpath = fh.lagerort(resource)
            # print(f"lagerort of sample {sampleid}: {locpath}")
            if locpath == None:
                self.err(f"no location path for sample {sampleid} in json, there should be one though.")

            query = "select * from centraxx_samplelocation where locationpath = ?"
            result = self.db.qfa(query, locpath)
            if len(result) == 0:
                self.err(f"location {locpath} for sample {sampleid} is not in db.") 
>>

Die Init-Funktion

<<init
    def __init__(self, fp):
        FhirCheck.__init__(self, fp)
>>

