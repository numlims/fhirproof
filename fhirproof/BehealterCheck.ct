BehealterCheck checkt die Proben-Behealter.

``//BehealterCheck.py:
``import``
class BehealterCheck(FhirCheck):
    ``init``
    ``check``
``

Prim√§rproben sollen Originalcontainer sein, Aliquot-Deriveds NUM
Aliquotcontainer.

``/check:
    def check(self, entry):
        ``.``
``

get the resource, sampleid and container.

``
        resource = dig(entry, "resource")
        sampleid = fh.sampleid(resource)
        
        container = dig(resource, "container/0/identifier/0/value")
``

check the behealter for primary sample.

``
        if fh.type(resource) == "MASTER" and container != "ORG":
            self.err(f"container for sample {sampleid} should be ORG (Originalcontainer) but is {container} in json.")
``

check the behealter for aliquot.

for now, take the list from freiburg. should this be pulled from cxx or be here in a mapping or so?

``
        aqt_allowed = ["NUM_AliContainer", "NUMCryoAliquot500", "NUMAliquot1000", "NUMAliquot2000"]
        if fh.type(resource) == "DERIVED" and container not in aqt_allowed:
           self.err(f"container for sample {sampleid} should be NUM_AliContainer but is {container} in json.")

``

init inits the stuff.

``/init:
    def __init__(self, fp):
        FhirCheck.__init__(self, fp)
``

the imports.

``/import:
import re

from fhirproof.FhirCheck import *
from dip import dig, dis
from fhirproof.fhirhelp import fhirhelp as fh
``
