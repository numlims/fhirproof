# DerivmatCheck checks the material of a derived (aliquot) entry.

``//DerivmatCheck.py:
``import``
class DerivmatCheck(FhirCheck):
      ``init``
      ``check``
``

Das Material eines Entries sollte dem Material seines Parent Entries
entsprechen, wenn es einen Parent gibt.

Ist der Entry ein Derived (Aliquot), muss sein Material das gleiche
sein wie das seiner Parent-Aliquotgroup. Vom Derived zur
Parent-Aliquotgroup kommen wir Ã¼ber die Fhirid.

``/check:
    def check(self, entry):
        resource = dig(entry, "resource")
        sampleid = fh.sampleid(resource)

        child_material = dig(resource, "type/coding/0/code")

        parentresource = self.fp.parent(entry)
        if fh.type(resource) == "DERIVED" and parentresource:
            parent_material = dig(parentresource, "type/coding/0/code")
            if parent_material != child_material:
                parentfhirid = dig(parentresource, "fullUrl")
                self.err(f"parent and child material don't match, parent {parentfhirid} is of material {parent_material}, child {sampleid} is of material {child_material} (that's not SOP-conform)")

``

Die Init-Funktion.

``/init:
    def __init__(self, fp):
        FhirCheck.__init__(self, fp)
``

Und die Importe.

``/import:
import re

from dip import dig
from fhirproof.FhirCheck import *
from fhirproof.fhirhelp import fhirhelp as fh
``
