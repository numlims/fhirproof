# MayUserEditOECheck checks whether the user who does the fhir import
  is allowed to edit organisations-einheiten (OEs)

``//MayUserEditOUCheck.py:
``import``
class MayUserEditOUCheck(FhirCheck):
    ``init``
    ``check``
``

Die Importe.

``/import:
from dip import dig
from fhirproof.FhirCheck import *
from fhirproof.fhirhelp import fhirhelp as fh
``

Es sollte geprüft werden, ob der später zu verwendende
FHIR-Import-User berechtigt ist, OEs der Proben und Probanden, die im
JSON-enthalten sind, zu bearbeiten.

Dafür ist der spätere Import-User als Parameter an das Skript zu
übergeben Die Zuordnung eines Users zu OEs ist in
CENTRAXX_PARTICIPANTORGUNITANO gespeichert.  User in
CENTRAXX_PARTICIPANT

mach den check nur wenn es eine db gibt.

``/check:
    # check checks whether user may edit the entry
    def check(self, entry, user):
        if self.db == None:
            return
            
        resource = dig(entry, 'resource')
        # get org unit
        orgunit = fh.org(resource)
        query = """
        select * from centraxx_participantorgunitano as poa
        join centraxx_participant as p on p.oid = poa.creator
        join centraxx_organisationunit as ou where poa.organisation = ou.oid
        where p.username = ? and ou.code = ?
        """

        """ dq query:
        select centraxx_participantorgunitano.* {
            .creator.username[ = ?],
            .organisation.code[ = ?]
        } 
        """
        result = self.db.qfad(query, user, orgunit)
        if len(result) == 0:
            self.err(f"user {user} may not edit the sample")
            return 

``

Die Init-Funktion.

``/init:
    def __init__(self, fp):
        FhirCheck.__init__(self, fp)
``
